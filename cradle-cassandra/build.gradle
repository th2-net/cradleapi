plugins {
    alias(libs.plugins.jmh)
}

configurations.configureEach {
    exclude group: 'com.esri.geometry'
    exclude group: 'org.apache.tinkerpop'
}

dependencies {
    api project(":cradle-core")

    jmh(libs.jmh.core)
    jmh(libs.jmh.generator.annprocess)

    implementation "org.apache.commons:commons-lang3"
    implementation(libs.task.utils)

    implementation "com.datastax.oss:java-driver-core"
    implementation "com.datastax.oss:java-driver-query-builder"
    implementation "com.datastax.oss:java-driver-mapper-processor"
    implementation "com.datastax.oss:java-driver-mapper-runtime"
    implementation 'com.google.guava:guava'

    // this section is required to bypass failing vulnerability check caused by cassandra driver's transitive dependencies
    annotationProcessor platform(libs.th2.bom)
    annotationProcessor "com.datastax.oss:java-driver-mapper-processor"
    // ---

    testImplementation(libs.testng)
    testImplementation(libs.assertj.core)
    testImplementation "org.apache.logging.log4j:log4j-slf4j2-impl"
    testImplementation 'org.apache.logging.log4j:log4j-core'
    testImplementation(libs.mockito.core)
    testImplementation(libs.cassandra)
}

test {
    useTestNG() {
        suites "src/test/resources/core.xml"
    }
}

tasks.register('integrationTest', Test) {
    group = 'verification'
    useTestNG() {
        suites "src/test/resources/integration.xml"
    }
}

jar {
    manifest {
        attributes("Specification-Title": "Cradle Cassandra")
    }
}